name: sonar-pr

on:
  workflow_run:
    workflows: [ 'pr-build' ]
    types: [ completed ]

permissions:
  pull-requests: read
  checks: write

jobs:
  sonar:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Download PR number artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.name }}
          run_id: ${{ github.event.workflow_run.id }}
          name: pr_number

      - name: Read Pull Request Number
        id: pr_number
        run: |
          PR=$(cat pr_number.txt)
          echo "pr_number=${PR}" >> "$GITHUB_OUTPUT"

      - name: Request GitHub API for PR data
        id: get_pr_data
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          route: GET /repos/{full_name}/pulls/{number}
          full_name: ${{ github.event.repository.full_name }}
          number: ${{ steps.pr_number.outputs.pr_number }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
          path: pr-content

      - name: Remove pom for Sonar Action
        run: |
          rm pr-content/pom.xml

      - name: Download PR number artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.name }}
          run_id: ${{ github.event.workflow_run.id }}
          name: jacoco
          path: pr-content

      - name: SonarCloud Scan (Pull Request)
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: pr-content
          args: >
            -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
            -Dsonar.pullrequest.key=${{ fromJson(steps.get_pr_data.outputs.data).number }}
            -Dsonar.pullrequest.branch=${{ fromJson(steps.get_pr_data.outputs.data).head.ref }}
            -Dsonar.pullrequest.base=${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}

