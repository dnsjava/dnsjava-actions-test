name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  checks: write

env:
  BUILD_JAVA_VERSION: '17'

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.owner.login == 'dnsjava'
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        java: [ '11', '17' ]
        arch: [ 'x64' ]
#        include:
#          - os: windows-latest
#            java: '17'
#            arch: x86

    name: Java ${{ matrix.java }}/${{ matrix.arch }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.arch }}
          distribution: temurin
          cache: maven

      - name: Build with Maven
        run: |
          mvn verify \
            -B \
            -Dsurefire.rerunFailingTestsCount=2 \
            -"Dgpg.skip" \
            jacoco:report
          cd target
          mv jacoco.exec jacoco-${{ matrix.java }}-${{ matrix.arch }}-${{ matrix.os }}.exec
          mv surefire-reports surefire-reports-${{ matrix.java }}-${{ matrix.arch }}-${{ matrix.os }}

      - name: Upload classes
        uses: ./.github/actions/upload-artifact
        if: matrix.java == env.BUILD_JAVA_VERSION && matrix.arch == 'x64' && matrix.os == 'ubuntu-latest'
        with:
          name: classes
          path: target/*classes

      - name: Upload JUnit Reports
        uses: ./.github/actions/upload-artifact
        if: always() # always run even if the previous step fails
        with:
          name: reports
          path: target/surefire-reports-*/TEST-*.xml

      - name: Upload Coverage Reports
        uses: ./.github/actions/upload-artifact
        if: always() # always run even if the previous step fails
        with:
          name: coverage
          path: target/jacoco-${{ matrix.java }}-${{ matrix.arch }}-${{ matrix.os }}.exec

  coverage:
    name: JaCoCo Report
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: temurin
          cache: maven

      - name: Get coverage artifact
        uses: ./.github/actions/download-artifact
        with:
          name: coverage
          path: target

      - name: Merge and output
        run: |
          mvn -B jacoco:merge jacoco:report
          ls -R target

      - name: Upload
        uses: ./.github/actions/upload-artifact
        with:
          name: merged-coverage
          path: target/site/jacoco/jacoco.xml

  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # for Sonar
          fetch-depth: 0

      - name: Get reports
        uses: ./.github/actions/download-artifact
        with:
          name: reports
          path: target

      - name: Get coverage
        uses: ./.github/actions/download-artifact
        with:
          name: merged-coverage
          path: target/site/jacoco

      - name: Get classes
        uses: ./.github/actions/download-artifact
        with:
          name: classes
          path: target

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create paths for JUnit reporting
        id: junit_paths
        run: |
          report_paths=""
          check_name=""
          for file in target/surefire-reports-*
          do
            report_paths="${file}/TEST-*.xml"$'\n'"${report_paths}"
            check_name="JUnit Report ${file##target/surefire-reports-}"$'\n'"${check_name}"
          done
          echo "report_paths<<EOF"$'\n'"${report_paths}EOF" >> $GITHUB_OUTPUT
          echo "check_name<<EOF"$'\n'"${check_name}EOF" >> $GITHUB_OUTPUT

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          report_paths: ${{ steps.junit_paths.outputs.report_paths }}
          check_name: ${{ steps.junit_paths.outputs.check_name }}
          require_tests: true
          check_retries: true
          detailed_summary: true

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.BUILD_JAVA_VERSION }}
          distribution: temurin
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B  org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
